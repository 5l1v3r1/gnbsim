// SPDX-FileCopyrightText: 2021 Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
// SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

package common

type EventType uint32

/* Using the MSB to represent the interface to which the event belongs.*/
const (
	/* Network interface events */
	UU_EVENT EventType = 0x1000000
	N1_EVENT EventType = 0x2000000
	N2_EVENT EventType = 0x3000000
	N3_EVENT EventType = 0x4000000

	/* Application's interfaces events */
	PROFILE_SIMUE_EVENT EventType = 0x5000000
	SIMUE_REALUE_EVENT  EventType = 0x6000000
)

/* Events between Profile and SimUe */
const (
	PROFILE_START_EVENT EventType = PROFILE_SIMUE_EVENT + 1 + iota
	PROFILE_PASS_EVENT
	PROFILE_FAIL_EVENT
)

/* Events between SimUe and RealUE */
const (
	DATA_PKT_GEN_REQUEST_EVENT EventType = SIMUE_REALUE_EVENT + 1 + iota
	DATA_PKT_GEN_SUCCESS_EVENT
	DATA_PKT_GEN_FAILURE_EVENT
)

/* Events between UE and GNodeB (UU) */
const (
	CONNECT_REQUEST_EVENT EventType = UU_EVENT + 1 + iota
	UL_INFO_TRANSFER_EVENT
	DL_INFO_TRANSFER_EVENT

	// For exchanging user data
	UL_UE_DATA_TRANSFER_EVENT
	DL_UE_DATA_TRANSFER_EVENT

	// For setting up channels between UE and GNB to exchange user data
	DATA_BEARER_SETUP_REQUEST_EVENT
	DATA_BEARER_SETUP_RESPONSE_EVENT

	// gNB acknowledges simue for releasing UE context using this event
	CTX_RELEASE_ACKNOWLEDGEMENT_EVENT

	// SimUe commands gNB to trigger RAN Connection release which further
	// triggers gNB initiated UE Context Release Request
	RAN_CONNECTION_RELEASE_EVENT
)

/* Events betweem UE and AMF (N1)
 * Following events offsets are numbered same as the NAS Message types in
 * section 9.7 of 3GPP TS 24.501. This makes it easy to generate events
 * corresponding to received NAS messages.
 */
const UE_5GS_MOBILITY_MANAGEMENT_EVENTS EventType = N1_EVENT + 64
const UE_5GS_SESSION_MANAGEMENT_EVENTS EventType = N1_EVENT + 192

// 5GS Mobility Management events.
const (
	_ EventType = UE_5GS_MOBILITY_MANAGEMENT_EVENTS + iota

	REG_REQUEST_EVENT //65
	REG_ACCEPT_EVENT
	REG_COMPLETE_EVENT
	REG_REJECT_EVENT
	DEREG_REQUEST_UE_ORIG_EVENT
	DEREG_ACCEPT_UE_ORIG_EVENT
	DEREG_REQUEST_UE_TERM_EVENT
	DEREG_ACCEPT_UE_TERM_EVENT //72

	SERVICE_REQUEST_EVENT = UE_5GS_MOBILITY_MANAGEMENT_EVENTS + 3 + iota //76
	SERVICE_REJECT_EVENT
	SERVICE_ACCEPT_EVENT //78

	AUTH_REQUEST_EVENT = UE_5GS_MOBILITY_MANAGEMENT_EVENTS + 10 + iota //86
	AUTH_RESPONSE_EVENT
	AUTH_REJECT_EVENT
	AUTH_FAILURE_EVENT
	AUTH_RESULT_EVENT
	ID_REQUEST_EVENT
	ID_RESPONSE_EVENT
	SEC_MOD_COMMAND_EVENT
	SEC_MOD_COMPLETE_EVENT
	SEC_MOD_REJECT_EVENT //95

	FIVE_GMM_STATUS_EVENT = UE_5GS_MOBILITY_MANAGEMENT_EVENTS + 14 + iota //86
	NOTIFICATION_EVENT
	NOTIFICATION_RESPONSE_EVENT
	UL_NAS_TRANSPORT_EVENT
	DL_NAS_TRANSPORT_EVENT
)

// 5GS Session Management events.
const (
	_ EventType = UE_5GS_SESSION_MANAGEMENT_EVENTS + iota

	PDU_SESS_EST_REQUEST_EVENT //193
	PDU_SESS_EST_ACCEPT_EVENT
	PDU_SESS_EST_REJECT_EVENT

	PDU_SESS_AUTH_COMMAND_EVENT = UE_5GS_SESSION_MANAGEMENT_EVENTS + 1 + iota
	PDU_SESS_AUTH_COMPLETE_EVENT
	PDU_SESS_AUTH_RESULT_EVENT

	PDU_SESS_MOD_REQUEST_EVENT = UE_5GS_SESSION_MANAGEMENT_EVENTS + 2 + iota
	PDU_SESS_MOD_REJECT_EVENT
	PDU_SESS_MOD_COMMAND_EVENT
	PDU_SESS_MOD_COMPLETE_EVENT
	PDU_SESS_MOD_CMD_REJECT_EVENT

	PDU_SESS_REL_REQUEST_EVENT = UE_5GS_SESSION_MANAGEMENT_EVENTS + 5 + iota
	PDU_SESS_REL_REJECT_EVENT
	PDU_SESS_REL_COMMAND_EVENT
	PDU_SESS_REL_COMPLETE_EVENT

	FIVEGSM_STATUS_EVENT = UE_5GS_SESSION_MANAGEMENT_EVENTS + 6 + iota //214
)

// Events between GNodeB and AMF (N2)
const (
	DOWNLINK_NAS_TRANSPORT_EVENT EventType = N2_EVENT + 1 + iota
	INITIAL_CTX_SETUP_REQUEST_EVENT
	PDU_SESS_RESOURCE_SETUP_REQUEST_EVENT
	UE_CTX_RELEASE_COMMAND_EVENT
)

// Events between GNodeB and UPF (N3)
const (
	DL_UE_DATA_TRANSPORT_EVENT EventType = N3_EVENT + 1 + iota
)
